{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","console","log","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endd","clone","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","settitleValid","formValues","setFormValues","useEffect","handleInpoutChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5fbdd1a.chunk.js","sourcesContent":["\nexport const types = {\n\n    //Modal\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    //Eventos\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n    //Eventos con base de datos\n    eventStartAddNew: '[event] Start add new',\n    eventLoaded: '[event] Event loaded',\n    eventLogout: '[event] Logout event',\n \n    //Autentificacion\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\n//Formate de un Evento\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload]\n            }\n\n        case types.eventLogout:\n        return {\n            ...initialState\n        }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name:null\r\n}\r\n\r\nexport const authReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            \r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            \r\n            return {\r\n                checking: false\r\n            }\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    \n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method='GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method==='GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method==='GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\n//Eventos con base de datos\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Erro', body.msg, 'error');\r\n            }\r\n\r\n       \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Erro', body.msg, 'error');\r\n            }\r\n\r\n       \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout});\r\n\r\n\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email,password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email,password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout});\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'jorge@gamil.com',\r\n        lPassword:'123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName:'Nando',\r\n        rEmail: 'nando@gamil.com',\r\n        rPassword1:'123456',\r\n        rPassword2:'123456',\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(formLoginValues);\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail,rPassword1,rName));\r\n        \r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();    \r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n                >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>  Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}  </strong>\r\n            <span> -{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst endd = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:endd.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(endd.toDate());\r\n    const [titleValid, settitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }        \r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInpoutChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStarDateChange = (e) => {\r\n        setdateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setdateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        // console.log('comienzo',momentStart);\r\n        // console.log(momentEnd);\r\n\r\n        if ( momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La Fecha Fin debe ser mayor que la fecha de Inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2 ) {\r\n            return settitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n       \r\n\r\n        settitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n        <h1> { (activeEvent) ?'Editar Evento' :'Nuevo evento'} </h1>\r\n        <hr />\r\n        <form \r\n            className=\"container\"\r\n            onSubmit={handleSubmitForm}\r\n        >\r\n        \r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker\r\n                    onChange={handleStarDateChange}\r\n                    value={dateStart}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n        \r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker\r\n                    onChange={handleEndDateChange}\r\n                    value={dateEnd}\r\n                    minDate={dateStart}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n        \r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInpoutChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n        \r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={notes}\r\n                    onChange={handleInpoutChange}\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n        \r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n        \r\n        </form>\r\n        \r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCliclNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleCliclNew}\r\n        >\r\n            <i className=\"fas fa-plus\" ></i>          \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title:'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(1, 'hours').toDate(),\r\n//     bgcolor:'#fafafa',\r\n//     notes:'comprar el pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name:'Jorge'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setlastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ?'#367CF7' :'#465660',\r\n            borderRadius:'0px',\r\n            opacity:0.8,\r\n            display:'block',\r\n            color:'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n           <Navbar />\r\n\r\n           <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            \r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) &&  <DeleteEventFab />\r\n            }          \r\n\r\n            <CalendarModal />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const {checking, uid} = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n    if (checking) {\n        //aca puede ir una pantalla de carga, incluso se le puede dar un tiempo para que no sea tan rapido\n        return (<h5>Espere.....</h5>)\n    }\n\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isAuthenticated={!!uid}\n                    />  \n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport {AppRouter} from './routers/AppRouter';\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}